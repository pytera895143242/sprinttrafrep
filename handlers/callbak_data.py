from aiogram import types
from misc import dp, bot
import asyncio
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher import FSMContext
from .sqlit import update_country,cheak_traf,reg_user,cheak_chat_id,get_country
import random

reg_user(0)

content_chat = -1001523112454

content_chat = -1001523112454

text_stop = """–ê—è—è–π —è —Å–º–æ—Ç—Ä—é, –∫—Ç–æ-—Ç–æ —Ä–µ—à–∏–ª
–ø–æ—à–∞–ª–∏—Ç—å üòè

–°–Ω–∞—á–∞–ª–∞ —Å–º–æ—Ç—Ä–∏ –≤–∏–¥–æ—Å, –∞ –ø–æ—Ç–æ–º –Ω–∞–∂–∏–º–∞–π))üëå"""

markup = types.InlineKeyboardMarkup()
bat_a = types.InlineKeyboardButton(text='–ß—Ç–æ —Ç–∞–∫–æ–µ –°–ø—Ä–∏–Ω—Ç?', callback_data='pognali')
markup.add(bat_a)

markup_2 = types.InlineKeyboardMarkup()
bat_a = types.InlineKeyboardButton(text='üî•–î–∞–ª—å—à–µüî•', callback_data='next')
markup_2.add(bat_a)

markup_3 = types.InlineKeyboardMarkup()
bat_a = types.InlineKeyboardButton(text='üî•–ù–∞—á–∏–Ω–∞–µ–ºüî•', callback_data='go_start')
markup_3.add(bat_a)

markup_4 = types.InlineKeyboardMarkup()
bat_a = types.InlineKeyboardButton(text='üòé–æ–ø –æ–øüòé', callback_data='go_go')
markup_4.add(bat_a)

markup_5 = types.InlineKeyboardMarkup()
bat_a = types.InlineKeyboardButton(text='üî• –ï–¥–µ–º –¥–∞–ª—å—à–µ üî•', callback_data='train_go')
markup_5.add(bat_a)

markup_6 = types.InlineKeyboardMarkup()
bat_a = types.InlineKeyboardButton(text='–ì–æ—Ç–æ–≤–æ‚úÖ', callback_data='ready')
markup_6.add(bat_a)


markup_test = types.InlineKeyboardMarkup()
bat_a = types.InlineKeyboardButton(text='–ê', callback_data='a')
bat_b = types.InlineKeyboardButton(text='–ë', callback_data='b')
bat_v = types.InlineKeyboardButton(text='–í', callback_data='v')
markup_test.add(bat_a,bat_b,bat_v)

markup_open_test = types.InlineKeyboardMarkup()
bat_a = types.InlineKeyboardButton(text='–¢–µ—Å—Ç', callback_data='open_test')
markup_open_test.add(bat_a)

class st(StatesGroup):
    step1 = State()
    step2 = State()
    step3 = State()
    step4 = State()
    step5 = State()


@dp.callback_query_handler(lambda call: True, state='*')
async def answer_push_inline_button(call, state: FSMContext):
    if call.data == 'go':
        await bot.copy_message(chat_id=call.message.chat.id, from_chat_id=content_chat, message_id=31) # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∏–∫–µ—Ä–∞
        await asyncio.sleep(2)
        await bot.send_message(text="""–û—Ç–ª–∏—á–Ω–æ, —Å–∫–æ—Ä–æ –±—É–¥–µ—à—å –≤–æ—Ç —Å —Ç–∞–∫–∏–º –º–µ—à–∫–æ–º —Ö–æ–¥–∏—Ç—å üí™""", chat_id=call.message.chat.id)
        await asyncio.sleep(3)
        a = await bot.send_message(text="""–ö–æ—Ä–æ—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂—É –ø—Ä–æ —Å–µ–±—è)

–ó–æ–≤—É—Ç –í–∞–¥–∏–º,
17 –ª–µ—Ç, —Ä–∞–±–æ—Ç–∞—é –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ.

–ó–∞–Ω–∏–º–∞—é—Å—å –±–ª–æ–≥–æ–º –∏ –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω–æ–º —Ç—Ä–∞—Ñ–∏–∫–∞. –û–∫–æ–ª–æ –≥–æ–¥–∞.

–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥ 5000$

–°–æ–∑–¥–∞–ª –°–ü–†–ò–ù–¢, –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ—Ç–æ—Ä–æ–º—É, —É–∂–µ —á–µ—Ä–µ–∑ –ø–∞—Ä—É –¥–Ω–µ–π —Ç—ã –∑–∞—Ä–∞–±–æ—Ç–∞–µ—à—å —Å–≤–æ–∏ –¥–µ–Ω—å–≥–∏ üí∏""",chat_id=call.message.chat.id)

        await asyncio.sleep(7)
        await bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id= a.message_id,reply_markup=markup)



    if call.data == 'pognali':
        await state.update_data(video1='stop')
        await bot.copy_message(chat_id=call.message.chat.id, from_chat_id=content_chat,message_id=38,reply_markup=markup_2)
        await asyncio.sleep(21/2)  # 210 —Å–µ–∫—É–Ω–¥
        await state.update_data(video1='start')


    if call.data == 'next':
        try:
            if ((await state.get_data())['video1']) == 'start':
                flag = True
            else:
                flag = False

        except:
            flag = True

        if flag == False:
            await call.message.answer(text_stop)

        else:
            await bot.copy_message(chat_id=call.message.chat.id, from_chat_id=content_chat,caption= """–¢–∞–∫ –¥–µ–ª–∞—é —è, –∏ –∫–∞–∂–¥—ã–π, –∫—Ç–æ <tg-spoiler>–ï–±–∞–®–∏—Ç</tg-spoiler> –≤ —Å–ø—Ä–∏–Ω—Ç–µ. –ü–æ—ç—Ç–æ–º—É,–µ—Å–ª–∏ —Ç—ã –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –¥–µ–ª–∞—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –∂–º–∏ üëáüëáüëá ( —É–∂–µ –Ω–µ —Ç–µ—Ä–ø–∏—Ç—Å—è –Ω–∞—á–∞—Ç—å —Ä–∞–∑—å—ë–±—á–∏–∫)""",message_id=40,reply_markup=markup_3)


    if call.data == 'go_start':
        await state.update_data(video2='stop')
        await bot.copy_message(chat_id=call.message.chat.id, from_chat_id=content_chat,message_id=43,reply_markup=markup_4)
        await asyncio.sleep(70)
        await state.update_data(video2='start')

    if call.data == 'go_go':
        try:
            if ((await state.get_data())['video2']) == 'start':
                flag = True
            else:
                flag = False

        except:
            flag = True

        if flag == False:
            await call.message.answer(text_stop)

        else:
            await state.update_data(video3='stop')
            await bot.copy_message(chat_id=call.message.chat.id, from_chat_id=content_chat, message_id=45,reply_markup=markup_open_test)
            await asyncio.sleep(75)
            await state.update_data(video3='start')

    if call.data == 'open_test':
        try:
            if ((await state.get_data())['video3']) == 'start':
                flag = True
            else:
                flag = False

        except:
            flag = True

        if flag == False:
            await call.message.answer(text_stop)

        else:
            await bot.send_message(chat_id=call.message.chat.id, text="""–ê—Ä–±–∏—Ç—Ä–∞–∂ —Ç—Ä–∞—Ñ–∏–∫–∞ —ç—Ç–æ?
–ê) –ü–µ—Ä–µ–≤–æ–¥ —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ –æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –≤ –¥—Ä—É–≥–æ–µ –∑–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π % –æ—Ç –ø—Ä–∏–±—ã–ª–∏
–ë) –ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ 
–í) –ü–æ–º–æ—â—å –Ω–æ–≤–∏—á–∫—É –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ""",reply_markup=markup_test)


    if call.data == 'b' or call.data == 'v': #–ù–ï–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
        await bot.send_message(text="""–ù–µ—Ç, —ç—Ç–æ –Ω–µ –∞—Ä–±–∏—Ç—Ä–∞–∂. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑""", chat_id=call.message.chat.id)


    if call.data == 'a':
        await bot.send_message(text="""–ö—Ä–∞—Å–∞–≤–∞üòé –î–≤–∏–≥–∞–µ–º—Å—è –¥–∞–ª—å—à–µ""", chat_id=call.message.chat.id)
        await asyncio.sleep(2)
        await state.update_data(video4='stop')

        await bot.copy_message(chat_id=call.message.chat.id, from_chat_id=content_chat, message_id=54,reply_markup=markup_5)
        await asyncio.sleep(100)
        await state.update_data(video4='start')


    if call.data == 'train_go':
        try:
            if ((await state.get_data())['video4']) == 'start':
                flag = True
            else:
                flag = False

        except:
            flag = True

        if flag == False:
            await call.message.answer(text_stop)

        else:
            await bot.send_message(text="""–°–µ–π—á–∞—Å —Å–æ–∑–¥–∞–¥–∏–º —Å —Ç–æ–±–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è –¥–ª—è –∑–∞—Ä–∞–±–æ—Ç–∫–∞ üòé""", chat_id=call.message.chat.id)
            await asyncio.sleep(3)
            await state.update_data(video5='stop')
            await bot.copy_message(chat_id=call.message.chat.id, from_chat_id=content_chat, message_id=76,reply_markup=markup_6)
            await asyncio.sleep(30)
            await state.update_data(video5='start')


    if call.data == 'ready':
        try:
            if ((await state.get_data())['video5']) == 'start':
                flag = True
            else:
                flag = False

        except:
            flag = True

        if flag == False:
            await call.message.answer(text_stop)

        else:
            await bot.send_message(text="""–ú–æ–ª–æ–¥–µ—Ü, —Ç—ã –ø–æ—á—Ç–∏ –¥–æ—à—ë–ª –¥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –°–ø—Ä–∏–Ω—Ç–∞, –∞ –∑–Ω–∞—á–∏—Ç –∏ –¥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–Ω–µ–≥üòé""",chat_id=call.message.chat.id)
            await asyncio.sleep(3)
            await bot.copy_message(chat_id=call.message.chat.id, from_chat_id=content_chat, message_id=93,caption="–ú–æ–π —Ç–µ–ª–µ–≥—Ä–∞–ºüëâ @VadimSprint")
            await asyncio.sleep(300)
            await bot.copy_message(chat_id=call.message.chat.id, from_chat_id=content_chat, message_id=96)#–§–ò–ù–ò–®

    await bot.answer_callback_query(callback_query_id=call.id)







